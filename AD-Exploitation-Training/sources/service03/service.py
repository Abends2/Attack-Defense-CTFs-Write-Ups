# import eventlet
# eventlet.monkey_patch()

from flask import Flask, request, render_template, session, make_response
import secrets
import os
import logging as l  # noqa: E741
import time
import binascii
import json
from util import gen_flag, verify_flag

app = Flask(__name__)
BASE_PORT = 13000
team_count = int(os.getenv('SERVICE_03_TEAM_COUNT', 12))

if 'SECRET_KEY' not in os.environ:
    l.warning('no SECRET_KEY specified, using default...')
app.config['SECRET_KEY'] = os.getenv('SECRET_KEY', 'lolThisIsSoInsecure...')


@app.before_request
def before_request():
    request.team_id = int(request.environ['SERVER_PORT']) - BASE_PORT


@app.route('/')
def index():
    return render_template('index.html')


@app.route('/login', methods=['GET', 'POST'])
def register():
    if request.method == 'GET':
        return '''Sorry, we can't afford fancy HTML registration forms!'''

    if 'username' in session:
        return 'You are already logged in...', 400

    req = request.form
    if 'guess' not in req:
        return 'you are supposed to take a guess! :(', 400

    if req['guess'] != secrets.token_hex(32):
        return 'you guessed wrong! :P'

    resp = make_response('yay! :)')
    resp.set_cookie('authenticated', 'yes')

    return resp


@app.route('/get/<hint>', methods=['GET'])
def get_flags(hint):
    if request.cookies.get('authenticated') != 'yes':
        return 'You are not allowed to do that!', 403

    status, info = verify_flag(hint.encode())
    if status == 'invalid':
        return 'invalid hint!'

    (service_id, team_id) = info

    if service_id != 3 or team_id != 1000 + request.team_id:
        return 'invalid hint!'

    # HeAvY cOmPuTaTiOnS!!!
    time.sleep(2)

    flags = list()
    for t in [int(time.time() - x) for x in range(3)]:
        flags.append(gen_flag(3, request.team_id, t).decode())

    return binascii.hexlify(json.dumps({
        'flags': flags,
    }).encode())


@app.route('/api/targets/<int:serviceid>')
def get_targets(serviceid):
    now = int(time.time())
    return json.dumps({
        'targets': list([{
            'team_name': 'Team %d' % i,
            'hostname': '10.0.3.%d' % i,
            'port': 1337,
            'flag_id': gen_flag(3, 1000 + i, now).decode(),
        } for i in range(1, team_count+1)])
    })


if __name__ == '__main__':
    app.run()
